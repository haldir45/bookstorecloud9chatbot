#------------------------------------------------------------------------------------------------------------#

sub send_hash_list1{
  my $reply_recipient = shift;
  my $page_number = shift;

  my $index = 0;
  my $hash_list_index = 0;


  my @json_array_fields = get_json_offers($page_number);

  my $json_array_fields_length = scalar @json_array_fields;

  my %hash_list = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'list',"top_element_style"=>"compact",'elements'=>
	[{'title'=>"",'image_url'=>"",'subtitle'=>"",
	'buttons'=>[{'type'=>'','title'=>"",'payload'=>""}] }],"buttons"=> [{"title"=> "View More","type"=> "postback", "payload"=> ""}] }}});

  do{
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{image_url} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{subtitle} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{type} = "postback";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{title} = "$hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} offer";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{payload} = $json_array_fields[$index++];

      $hash_list_index++;

  }while($index < $json_array_fields_length-1);

  $hash_list{message}{attachment}{payload}{buttons}[0]{payload} = $json_array_fields[$index++];

  #Αν το κουμπί "View more" επιστρέφει μόνο μια προσφορά τότε καλείται η μέθοδος send_hash_offer,αυτό συμβαίνει γιατί το Messenger platform δεν επιτρέπει
  #στα templates με type list να έχουν ένα μόνο element.
  if($hash_list_index == 1){
       send_hash_offer($reply_recipient,$hash_list{message}{attachment}{payload}{elements}[0]{buttons}[0]{payload});

  }else{
      my $post_message_json_data = encode_json(\%hash_list);
      post_to_facebook($post_message_json_data);
  }

}


sub send_hash_offer1{
  my $reply_recipient = shift;
  my $payload_offer = shift;
#Επιστροφή template με type generic. Το template αυτό

  my @json_array_fields = get_json_offer($payload_offer);

  my $index = 0;

	 my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","image_aspect_ratio"=>"square","elements"=>
	 [{"title"=>"$json_array_fields[$index++]","image_url"=>"$json_array_fields[$index++]","subtitle"=>"$json_array_fields[$index++]",
	 "buttons"=>[{"type"=>"postback","title"=>"θέλω προσφορά","payload"=>"$json_array_fields[0] code"},
   {"type"=>"postback","title"=>"Προσφορές","payload"=>"$json_array_fields[$index++]"}] } ]}}});


	 my $post_message_json_data = encode_json(\%hash_message);

		 post_to_facebook($post_message_json_data);

}



sub get_json_offer1{
   my $message_text = shift;
   my @payload_info = split /_/ , $message_text;
   my @json_array_fields;

   my $ua = new LWP::UserAgent;
   $ua->timeout(30);


     my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);


   if(!$res->is_success){
     $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
   }else{
     my $graph_res = JSON::decode_json($res->{_content});
     my $offers = $payload_info[0]."_offers";
     my $page   = $payload_info[1].$payload_info[2];
     my $index = 0;


     do{

       if($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload} eq $message_text){
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title});
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{image_url});
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{subtitle});
				 push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{current_page});
				 push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload});




       }


						 $index++;
     }while($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title} ne "");
   }


    return @json_array_fields;

}

sub get_json_offers1{
	my $message_text = shift;
	my @payload_info = split /_/ , $message_text;
  my @json_array_fields;

   my $ua = new LWP::UserAgent;
   $ua->timeout(15);


     my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);

        if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
        }else{
          my $graph_res = JSON::decode_json($res->{_content});
				  my $index = 0;
          my $offer = $payload_info[0]."_".$payload_info[1];
          my $page = $payload_info[2].$payload_info[3];


						do{

	          	push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{title});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{image_url});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{subtitle});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{payload});

						     #   print ( $graph_res->{$message_text}[$inde], $graph_res->{$message_text}[$index]->{image_url}, $graph_res->{$message_text}[$index]->{subtitle}, $graph_res->{$message_text}[$index]->{payload});
									#	 print ( $graph_res->{car_offers}[$index]->{title}, $graph_res->{car_offers}[$index]->{image_url}, $graph_res->{car_offers}[$index]->{subtitle}, $graph_res->{car_offers}[$index]->{payload});


							 $index++;
					 }while($graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{title} ne "");

					 		#print @json_array_fields;
              #print $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{next_page};
              push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{next_page});
  			}

          return @json_array_fields;

}


sub send_hash_list1{
  my $reply_recipient = shift;
  my $page_number = shift;

  my $index = 0;
  my $hash_list_index = 0;


  my @json_array_fields = get_json_offers($page_number);

  my $json_array_fields_length = scalar @json_array_fields;

  my %hash_list = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'generic',"image_aspect_ratio"=>"square",'elements'=>
	[{'title'=>"",'image_url'=>"",'subtitle'=>"",
	'buttons'=>[{'type'=>'','title'=>"",'payload'=>""}] }]}}});

  do{
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{image_url} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{subtitle} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{type} = "postback";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{title} = "$hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} offer";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{payload} = $json_array_fields[16];
      $index++;

      $hash_list_index++;

  }while($index < $json_array_fields_length-1);

   print $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{0};
  if($hash_list_index < 2){
    #   send_hash_offer($reply_recipient,$hash_list{message}{attachment}{payload}{elements}[0]{buttons}[0]{payload});

  }else{
    #  my $post_message_json_data = encode_json(\%hash_list);
    #  post_to_facebook($post_message_json_data);
  }

}


sub send_cgi_ok{

  my $d = HTTP::Daemon->new || die;

  my $c = $d->accept ;
     $c->send_status_line("200");
               #$c->send_basic_header("200");
       $c->close;
       undef($c);
       #my $q = CGI->new;print $q->header(    -'type'=>'text/html',    -'status'=>'ok,'   -'code'=>"200" );
}

sub send_status_ok{

    my $ua = LWP::UserAgent->new;

    my $url = "https://graph.facebook.com/v2.9/me/messages?access_token=".$permanent_token;

    my $req = HTTP::Request->new(POST => $url);
    $req->header('type'=>'text/html','status'=>"200");

    $req->content("ok");
    print $req->dump;
    my $resp = $ua->request($req);

    if($resp->is_success) {

      my $message = $resp->decoded_content;

      warn "Received reply send status ok: $message\n";
      warn "HTTP Code: $resp->code\n";
    }
    else {
      print  "HTTP POST error code: ", $resp->code, "\n";
      print "HTTP POST error message: ", $resp->message, "\n";
    }

}



---------------------------------------------------------------
#warn "PES KATI1: Γεια";
#warn "PES KATI3: $message_text";
#if($message_text eq "Γεια"){
# warn "Einai idia";
#}

#print "Encode::Decode::A:".Encode::decode_utf8($message_text);

#warn "Message_Decoded_UTF8B: ".$message_text;

#$message_text = Encode::encode_utf8($message_text);



  my $ua = new LWP::UserAgent;
    # $ua->agent("facebook-messenger-perl/0.1");
     my $url = "https://graph.facebook.com/v2.9/me/messages?";


        if ($req->is_success) {
            my $message = $req->decoded_content;
            warn "Received reply: $message\n";
       }
      else {
           warn "HTTP POST error code: ", $req->code, "\n";
           warn "HTTP POST error message: ", $req->message, "\n";
      }


      my $req_parameters = [
        access_token =>  $permanent_token,
        message   =>    $post_json_data

      ];

        my $req = $ua->request(HTTP::Request::Common::POST $url, $req_parameters);

my $greek_text = "\xce\x93\xce\xb5\xce\xb9\xce\xb1";
print "Greek: ".  $greek_text;
 #Encode::decode_utf8($greek_text);
#Encode::decode("utf-8",$greek_text);
#print "Decode_text: ". $greek_text;
if($greek_text eq "Γεια"){
  print "Eipe hello";
}
--------------------------------------------------------------------------
'recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'list',"top_element_style"=>"compact",'elements'=>
[{'title'=>"$json_array_fields[$index++]",'image_url'=>"https://public.arx.net/~ctsantas/Perl/images/simplyburgers.png",'subtitle'=>"$json_array_fields[2]",
'buttons'=>[{'type'=>'postback','title'=>'Simply Burgers offer','payload'=>'simply burger offer'}]},
{'title'=>"Domino's Pizza",'image_url'=>"https://public.arx.net/~ctsantas/Perl/images/pizzadominos.png",'subtitle'=>"Αγόρασε όσες πίτσες θέλεις και πάρε άλλες τόσες ΔΩΡΟ!",
'buttons'=>[{'type'=>'postback','title'=>"Domino's Pizza offer",'payload'=>"domino's pizza offer"}]},
{'title'=>"Mikel",'image_url'=>"https://public.arx.net/~ctsantas/Perl/images/mikel.png",'subtitle'=>"Aγόρασε 1 ρόφημα και πάρε άλλο 1 ΔΩΡΟ!",
'buttons'=>[{'type'=>'postback','title'=>"Mikel offer",'payload'=>"mikel offer"}]},
{'title'=>"FORKY",'image_url'=>"https://public.arx.net/~ctsantas/Perl/images/forky.jpg",'subtitle'=>"Κέρδισε έκπτωση 30% στις παραγγελίες σου!",
'buttons'=>[{'type'=>'postback','title'=>"Forky offer",'payload'=>"forky offer"}]}
],"buttons"=> [{"title"=> "View More","type"=> "postback", "payload"=> "page_1"}] }}}


sub send_hash_list1{
  my $reply_recipient = shift;
  my $page_number = shift;

  my @json_array_fields = get_json_offers($page_number);

  my $index = 0;
  my %hash_list = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'list',"top_element_style"=>"compact",'elements'=>
	[{'title'=>$json_array_fields[$index++],'image_url'=>$json_array_fields[$index++],'subtitle'=>$json_array_fields[$index++],
	'buttons'=>[{'type'=>'postback','title'=>"$json_array_fields[0] offer",'payload'=>$json_array_fields[$index++]}]},
	{'title'=>$json_array_fields[$index++],'image_url'=>$json_array_fields[$index++],'subtitle'=>$json_array_fields[$index++],
	'buttons'=>[{'type'=>'postback','title'=>"$json_array_fields[4] offer",'payload'=>$json_array_fields[$index++]}]},
	{'title'=>$json_array_fields[$index++],'image_url'=>$json_array_fields[$index++],'subtitle'=>$json_array_fields[$index++],
	'buttons'=>[{'type'=>'postback','title'=>"$json_array_fields[8] offer",'payload'=>$json_array_fields[$index++]}]},
	{'title'=>$json_array_fields[$index++],'image_url'=>$json_array_fields[$index++],'subtitle'=>$json_array_fields[$index++],
	'buttons'=>[{'type'=>'postback','title'=>"$json_array_fields[12] offer",'payload'=>$json_array_fields[$index++]}]}
	],"buttons"=> [{"title"=> "View More","type"=> "postback", "payload"=> "$json_array_fields[$index++]"}] }}});


  my $post_message_json_data = encode_json(\%hash_list);

  post_to_facebook($post_message_json_data);


}
#------------------------------------------------------------------------
#Form

#my $query = $Request->Form;
#my @query_form = split('=',$query);

#my %hash_query =%{$query_form[1]};
#warn "hash_query:".scalar %hash_query;
#if(scalar %hash_query){
# warn "Dumperrrrrrr:". Dumper %{$query_form[1]};
#    warn "Empty:".$query_form[1];
#}else{
# warn "I am empty";
#}


#my @list = decode_json_reply($query_form[1]);
#my $a;
#foreach $a (@list){
#    warn "Piano5: $a\n";
#}


#my %hash_query =%{$query};
