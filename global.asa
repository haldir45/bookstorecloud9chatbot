use strict;
use warnings 'all';

use JSON 'decode_json';
use JSON 'encode_json';
use Data::Dumper;
use HTTP::Request::Common;
use HTTP::Response;
use LWP::UserAgent;
use CGI;
use HTTP::Daemon;
use HTTP::Status;
use utf8;
use DBI();
use feature "switch";
use Scalar::Util qw(looks_like_number);

my $permanent_token = "EAAOGFe8d8K4BAM5aeLt36ZBDNnfJHBFcuft06LaYb0hXmMNvepaf6fYGsYk0sHUkMvdLm6FrXCQ3z1qlLyilBx2u61nAzBNeShGHpyxFrwasVLgzAbkZCSU3vfZCjgB27j1cItcH5g2wvNKZAKFUWvW1cQrUKE5Nkoa9Nox6SwZDZD";
my %hash_table = ('TGI FRIDAYS προσφορά' => "entertainment_page_7_tgi_offer",'VOLTA FUN TOWN προσφορά'=>"entertainment_page_7_voltafuntown_offer");



sub functFun{
  my $code = 0;
  for(my $i=0; $i<5;$i++){
    $code .= int rand(10);
  }
  return $code;


}




sub dbconn {
	my $dbh;
	$dbh = DBI->connect( "DBI:Pg:dbname=VodafoneThankYou; host=dbms; port = 5432","postgres","Aej7uN3m", { AutoCommit => 1, pg_server_prepare => 0 } )|| die $DBI::errstr;
	#$dbh = DBI->connect( "DBI:Pg:dbname=websites_dev; host=192.168.100.135; port = 5432","su_anon","429272thes", { AutoCommit => 1, pg_server_prepare => 0 } )|| die $dbh->errstr;
	$dbh->do("SET CLIENT_ENCODING TO 'UTF-8'") || die $dbh->errstr."\n";
	return $dbh;
}
sub decode_json_reply{
  #Decoding the message we recieved from the messenger
  my $json_text = shift;

  warn "Callback_Messages_Testa2:".$json_text;


  my $message_res = decode_json($json_text);

  my $message_text ;
  $message_text= $message_res->{entry}[0]->{messaging}[0]->{message}->{text};
  my $message_sender_id = $message_res->{entry}[0]->{messaging}[0]->{sender}->{id};
  my $message_recipient_id = $message_res->{entry}[0]->{messaging}[0]->{recipient}->{id};
  my $message_payload = $message_res->{entry}[0]->{messaging}[0]->{postback}->{payload};
  my $message_watermark = $message_res->{entry}[0]->{messaging}[0]->{delivery}->{watermark};

  #If the message we recieved is a payload send back the option you choose
  #else if is a  message delivered callback send a status ok
  my @message = ($message_text,$message_sender_id);
    if(defined $message_payload){
      warn "AN01";
      send_reply_to_callbacks($message_payload,$message_sender_id);
   }
   if(defined $message_watermark){
        warn "AN02";
    #  send_cgi_ok();
      #  send_status_ok();
   }
   if(defined $message_text){
           warn "AN03 $message_text";

          send_back_reply(@message);
      #  warn "Validate phone1: ", $Session->{validate_phone_number};
      #  if(!$Session->{validate_phone_number}){
      #     check_phone_number(@message);
      #  }else{   }

   }


}

sub send_reply_to_callbacks{
  my $message_text = shift;
  my $message_recipient_id = shift;

  my $reply_message = "Επέλεξες το $message_text";

	given( $message_text){

	 when ( "categories list") {  send_hash_categories_message($message_recipient_id) }

	 when (index($message_text,"offers") != -1) { send_hash_list($message_recipient_id,$message_text)}

   when (index($message_text,"offer") != -1)  {  send_hash_offer($message_recipient_id,$message_text)}

   when(index($message_text,"code") != -1)    {  send_hash_message($message_recipient_id,"Πληκτρολόγησε τον αριθμό του κινητού σου για να πάρεις κωδικό.")}

	 default {send_hash_message($message_recipient_id,$reply_message)}

	}
}

sub send_back_reply{
    my $message_text = shift;
    my $message_recipient_id = shift;

    my $reply_message = "Δεν καταλαβαίνω";

    warn "MEssageggg: $message_text";
		given(lc $message_text){
        when("γεια"){         send_hash_welcome_message($message_recipient_id)}
			  when("προσφορές"){    send_hash_list($message_recipient_id,"food_offers_page_0")}
        when(index(lc $message_text,"προσφορά") != -1){
           for my $name (keys %hash_table) {
            if(lc $name eq lc $message_text){
               send_hash_offer($message_recipient_id,$hash_table{$name});
            }
          }
        }
       when(looks_like_number($message_text)) {check_phone_number($message_text,$message_recipient_id)}
			 when("κατηγορίες"){   send_hash_categories_message($message_recipient_id)}
			#default {             send_hash_message($message_recipient_id,$reply_message)}


		}

}

sub check_phone_number{
  my $message_text = shift;
  my $message_recipient_id = shift;

  #$message_text =~ m/^[0-9]{10}$/

  if(get_json_phone_numbers($message_text)){
        send_hash_message(  $message_recipient_id,"Ο αριθμός σου είναι $message_text");
        send_hash_message(  $message_recipient_id,"Ο κωδικός σου είναι ".functFun());
    #  $Session->{validate_phone_number} = 1;
  }else{
      send_hash_message( $message_recipient_id,"Ο αριθμός $message_text που πληκτρολόγησες δεν είναι σωστός");
  }

}



sub send_hash_welcome_message{
  my $reply_recipient = shift;

  #my @user_info = get_started_button($reply_recipient);
    my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","image_aspect_ratio"=>"square","elements"=>
    [{"title"=>"Καλωσήρθατε στο Vodafone ThankYou chatbot","image_url"=>"https://public.arx.net/~ctsantas/Perl/images/vodafone_logo.jpg","subtitle"=>"We\'ve got the right deals for you.",
    "buttons"=>[{"type"=>"postback","title"=>"Δώσε Κατηγορίες","payload"=>"categories list"}]} ]}}});

    my $post_message_json_data = encode_json(\%hash_message);

      post_to_facebook($post_message_json_data);
}



sub send_hash_categories_message{
    my $reply_recipient = shift;

  my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","elements"=>[{"title"=>"Οικογένεια","subtitle"=>"Προσφορές για όλη την οικογένεια.",
"buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"family_offers_page_0"}]},{"title"=> "Supermarket & Αγορές","subtitle"=>"Προσφορές για Supermarket.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"supermarket_offers_page_0"}]},{"title"=> "Διασκέδαση","subtitle"=>"Διασκέδασε τώρα πιο οικονομικά με 1+1.",
"buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"entertainment_offers_page_0"}]},{"title"=> "Αυτοκίνητο","subtitle"=>"Προσφορές και στις μετακινήσεις.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"car_offers_page_0"}]},
{"title"=> "Φαγητό & Καφές","subtitle"=>"Προσφορές στο φαγητό και στο καφέ.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"food_offers_page_0"}]} ]}}});



  my $post_message_json_data = encode_json(\%hash_message);

    post_to_facebook($post_message_json_data);

}
sub send_hash_message{
    my $reply_recipient = shift;
    my $reply_message = shift;



      my %hash_message = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'text' => $reply_message});

      my $post_message_json_data = encode_json(\%hash_message);

        post_to_facebook($post_message_json_data);
}

sub send_hash_offer{
  my $reply_recipient = shift;
  my $payload_offer = shift;


  my @json_array_fields = get_json_offer($payload_offer);

  my $index = 0;

	 my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","image_aspect_ratio"=>"square","elements"=>
	 [{"title"=>"$json_array_fields[$index++]","image_url"=>"$json_array_fields[$index++]","subtitle"=>"$json_array_fields[$index++]",
	 "buttons"=>[{"type"=>"postback","title"=>"θέλω προσφορά","payload"=>"$json_array_fields[0] code"},{"type"=>"postback","title"=>"Προσφορές","payload"=>"$json_array_fields[$index++]"}] } ]}}});

	 my $post_message_json_data = encode_json(\%hash_message);

		 post_to_facebook($post_message_json_data);

}
sub send_hash_list1{
  my $reply_recipient = shift;
  my $page_number = shift;

  my $index = 0;
  my $hash_list_index = 0;


  my @json_array_fields = get_json_offers($page_number);

  my $json_array_fields_length = scalar @json_array_fields;

  my %hash_list = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'generic',"image_aspect_ratio"=>"square",'elements'=>
	[{'title'=>"",'image_url'=>"",'subtitle'=>"",
	'buttons'=>[{'type'=>'','title'=>"",'payload'=>""}] }]}}});

  do{
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{image_url} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{subtitle} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{type} = "postback";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{title} = "$hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} offer";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{payload} = $json_array_fields[16];
      $index++;

      $hash_list_index++;

  }while($index < $json_array_fields_length-1);

   print $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{0};
  if($hash_list_index < 2){
    #   send_hash_offer($reply_recipient,$hash_list{message}{attachment}{payload}{elements}[0]{buttons}[0]{payload});

  }else{
    #  my $post_message_json_data = encode_json(\%hash_list);
    #  post_to_facebook($post_message_json_data);
  }

}

sub send_hash_list{
  my $reply_recipient = shift;
  my $page_number = shift;

  my $index = 0;
  my $hash_list_index = 0;


  my @json_array_fields = get_json_offers($page_number);

  my $json_array_fields_length = scalar @json_array_fields;

  my %hash_list = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'list',"top_element_style"=>"compact",'elements'=>
	[{'title'=>"",'image_url'=>"",'subtitle'=>"",
	'buttons'=>[{'type'=>'','title'=>"",'payload'=>""}] }],"buttons"=> [{"title"=> "View More","type"=> "postback", "payload"=> ""}] }}});

  do{
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{image_url} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{subtitle} = $json_array_fields[$index++];
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{type} = "postback";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{title} = "$hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} offer";
      $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{payload} = $json_array_fields[$index++];

      $hash_list_index++;

  }while($index < $json_array_fields_length-1);

  $hash_list{message}{attachment}{payload}{buttons}[0]{payload} = $json_array_fields[$index++];



  if($hash_list_index < 2){
       send_hash_offer($reply_recipient,$hash_list{message}{attachment}{payload}{elements}[0]{buttons}[0]{payload});

  }else{
      my $post_message_json_data = encode_json(\%hash_list);
      post_to_facebook($post_message_json_data);
  }

}


sub post_to_facebook{
  my $post_message_json_data = shift;

  my $ua = LWP::UserAgent->new;

  my $url = "https://graph.facebook.com/v2.9/me/messages?access_token=".$permanent_token;


  my $req = HTTP::Request->new(POST => $url);
  $req->header('Content-type' => 'application/json');


  $req->content($post_message_json_data);

  warn $req->dump;
  #send_writing(); you have to pass as parameter the $messenger_recipient because it's a topic variable in decode_json_reply function
  my $resp = $ua->request($req);

    if ($resp->is_success) {

      my $message = $resp->decoded_content;


      warn "Received reply: $message\n";
    }
    else {
      warn  "HTTP POST error code: ", $resp->code, "\n";
      warn "HTTP POST error message: ", $resp->message, "\n";
    }

}

sub get_json_phone_numbers{

  my $message_text = shift;
  my $ua = new LWP::UserAgent;
  $ua->timeout(30);


    my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_phone_numbers.json";
    my $res = $ua->request(HTTP::Request::Common::GET $graph_url);
    my $valid_number = 0;

  if(!$res->is_success){
    $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
  }else{

    my $graph_res = JSON::decode_json($res->{_content});
    my $index = 0;


    do{
       if($message_text eq $graph_res->{users}[$index]->{phone_number})
       {
           $valid_number = 1;
       }

        $index++;
    }while($graph_res->{users}[$index]->{first_name} ne "");
  }

  return $valid_number;
}

sub get_json_offer{
   my $message_text = shift;
   my @payload_info = split /_/ , $message_text;
   my @json_array_fields;

   my $ua = new LWP::UserAgent;
   $ua->timeout(30);


     my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);


   if(!$res->is_success){
     $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
   }else{
     my $graph_res = JSON::decode_json($res->{_content});
     my $offers = $payload_info[0]."_offers";
     my $page   = $payload_info[1].$payload_info[2];
     my $index = 0;


     do{

       if($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload} eq $message_text){
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title});
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{image_url});
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{subtitle});
         push(@json_array_fields,$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload});

       }


						 $index++;
     }while($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title} ne "");
   }


    return @json_array_fields;

}

sub get_json_offers{
	my $message_text = shift;
	my @payload_info = split /_/ , $message_text;
  my @json_array_fields;

   my $ua = new LWP::UserAgent;
   $ua->timeout(15);


     my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);

        if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
        }else{
          my $graph_res = JSON::decode_json($res->{_content});
				  my $index = 0;
          my $offer = $payload_info[0]."_".$payload_info[1];
          my $page = $payload_info[2].$payload_info[3];


						do{

	          	push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{title});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{image_url});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{subtitle});
							push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{payload});

						     #   print ( $graph_res->{$message_text}[$inde], $graph_res->{$message_text}[$index]->{image_url}, $graph_res->{$message_text}[$index]->{subtitle}, $graph_res->{$message_text}[$index]->{payload});
									#	 print ( $graph_res->{car_offers}[$index]->{title}, $graph_res->{car_offers}[$index]->{image_url}, $graph_res->{car_offers}[$index]->{subtitle}, $graph_res->{car_offers}[$index]->{payload});


							 $index++;
					 }while($graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{title} ne "");

					 		#print @json_array_fields;
              #print $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{next_page};
              push(@json_array_fields,$graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{next_page});
  			}

          return @json_array_fields;

}



sub authorize{

my  $token_url = "https://graph.facebook.com/oauth/access_token?"."grant_type=fb_exchange_token". "&client_id=" . app_conf()->{app_id}."&client_secret=" . app_conf()->{app_secret}.
"&fb_exchange_token=EAAOGFe8d8K4BAL5uD79Sf9ZAIZAZCIPLHiMqpqd0fuxVSMvZBIcIgVCulPBZCARmFpOE4qMwfyfQVD3dFliauZAUtpDh3pOtrzNTY4zXaRtAZAZBLwhDncKU3Li4fq4xeUYHDuvCRSdNt9Kivk6FVwgLc417LjXWxDy5UesWn9QItgZDZD";
    my $ua = new LWP::UserAgent;
    $ua->timeout(15);

    my $res = $ua->request(HTTP::Request::Common::GET $token_url);

    my $decode_text = JSON::decode_json($res->{_content});

    if ( $res->is_success ) {

          my $token = $decode_text->{access_token};

           print $token;

            my $graph_url = "https://graph.facebook.com/me?access_token=". $token;
            $res = $ua->request(HTTP::Request::Common::GET $graph_url);
           if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
           }else{
                 my $graph_res = JSON::decode_json($res->{_content});
              if ($graph_res->{name}) {

               print "Name: $graph_res->{name} ID: $graph_res->{id}";
              }
           }

    } else {
        die Dumper [ $res ];
    }


}
sub get_page{
   my $ua = new LWP::UserAgent;
   $ua->timeout(15);

     my $graph_url = "https://graph.facebook.com/me?access_token=".$permanent_token;
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);

        if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
        }else{
          my $graph_res = JSON::decode_json($res->{_content});
           if ($graph_res->{name}) {
              print "Name: $graph_res->{name} ID: $graph_res->{id}";
           }
        }

}

sub app_conf {
  return {
    app_secret    => "70a9715ac1e24f7a00006cead048f7a1",
    app_id        => "991853694283950",
  };
}

sub webhook{
 my $challenge = $Request->QueryString("hub.challenge");
 my $verify_token = $Request->QueryString("hub.verify.token");


 if($verify_token eq "Aej7uN3m"){
     return $challenge;
  }


}
