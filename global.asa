use strict;
use warnings 'all';


use JSON 'decode_json';
use JSON 'encode_json';
use Data::Dumper;
use HTTP::Request::Common;
use HTTP::Response;
use LWP::UserAgent;
use CGI;
use HTTP::Daemon;
use HTTP::Status;
use utf8;
use feature "switch";
use Scalar::Util qw(looks_like_number);

my $permanent_token = "EAAOGFe8d8K4BAM5aeLt36ZBDNnfJHBFcuft06LaYb0hXmMNvepaf6fYGsYk0sHUkMvdLm6FrXCQ3z1qlLyilBx2u61nAzBNeShGHpyxFrwasVLgzAbkZCSU3vfZCjgB27j1cItcH5g2wvNKZAKFUWvW1cQrUKE5Nkoa9Nox6SwZDZD";
my %hash_table = ('TGI FRIDAYS προσφορά' => "entertainment_page_7_tgi_offer",'VOLTA FUN TOWN προσφορά'=>"entertainment_page_7_voltafuntown_offer");


sub decode_json_reply{
  #Decoding the message we recieved from the messenger
  my $json_text = shift;

  warn "Callback_Messages_Testa2:".$json_text;


  my $message_res = decode_json($json_text);

  my $message_text ;
  $message_text= $message_res->{entry}[0]->{messaging}[0]->{message}->{text};
  my $message_sender_id = $message_res->{entry}[0]->{messaging}[0]->{sender}->{id};
  my $message_recipient_id = $message_res->{entry}[0]->{messaging}[0]->{recipient}->{id};
  my $message_payload = $message_res->{entry}[0]->{messaging}[0]->{postback}->{payload};
  my $message_watermark = $message_res->{entry}[0]->{messaging}[0]->{delivery}->{watermark};

  #Ελέγχουμε αν το response είναι μήνυμα,payload callback ή watermark
  my @message = ($message_text,$message_sender_id);
    if(defined $message_payload){
      warn "AN01";
      send_reply_to_callbacks($message_payload,$message_sender_id);
   }
   if(defined $message_watermark){
        warn "AN02";
    #  send_cgi_ok();
      #  send_status_ok();
   }
   if(defined $message_text){
           warn "AN03 $message_text";

          send_back_reply(@message);
   }


}

#Έλεγχος της τιμής του payload.Ανάλογα με την τιμή του payload καλούμε την αντίστοιχη τιμή.
#Πιθανές τιμές categories,offers,offer και code.
sub send_reply_to_callbacks{
  my $message_text = shift;
  my $message_recipient_id = shift;

  my $reply_message = "Επέλεξες το $message_text";

	given( $message_text){

	 when ( "categories list") {  send_hash_categories_message($message_recipient_id) }

	 when (index($message_text,"offers") != -1) { send_hash_list($message_recipient_id,$message_text)}

   when (index($message_text,"offer") != -1)  {  send_hash_offer($message_recipient_id,$message_text)}

   when(index($message_text,"code") != -1)    {  send_hash_message($message_recipient_id,"Πληκτρολόγησε τον αριθμό του κινητού σου για να πάρεις κωδικό.")}

	 default {send_hash_message($message_recipient_id,$reply_message)}

	}
}

#Αν το response είναι text τότε απαντάμε με το κατάλληλο μήνυμα
#αν ανιστοιχεί στις λέξεις: γεια,προσφορές,κατηγορίες,προσφορά.Επίσης ελε΄γχουμε αν είναι αριθμός.
sub send_back_reply{
    my $message_text = shift;
    my $message_recipient_id = shift;

    my $reply_message = "Δεν καταλαβαίνω";


		given(lc $message_text){

        when("γεια"){         send_hash_welcome_message($message_recipient_id)}

       when("προσφορές"){    send_hash_list($message_recipient_id,"food_offers_page_0")}

        #Αν το text περιέχει την λέξη προσφορά ελέγχουμε αν μέσα στο μήνυμα υπάρχει το όνομα από κάποια καταχωρημένη προσφορά
        when(index(lc $message_text,"προσφορά") != -1){
           for my $name (keys %hash_table) {
            if(lc $name eq lc $message_text){
               send_hash_offer($message_recipient_id,$hash_table{$name});
            }
          }
        }

       when(looks_like_number($message_text)) {check_phone_number($message_text,$message_recipient_id)}

       when("κατηγορίες"){   send_hash_categories_message($message_recipient_id)}
			#default {             send_hash_message($message_recipient_id,$reply_message)}


		}

}

#Αποστολή επιβεβαίωσης σωστού αριθμού και κωδικού σε περίπτωση που ο αριθμός είναι δεκαψήφιος και βρίσκεται μέσα στην βάση μας
#αλλιώς ειδοποιούμε τον χρήστη ότι ο αριθμός δεν είναι σωστός.
sub check_phone_number{
  my $message_text = shift;
  my $message_recipient_id = shift;

if($message_text =~ m/^[0-9]{10}$/){
	if(get_json_phone_numbers($message_text)){
        send_hash_message(  $message_recipient_id,"Ο αριθμός σου είναι $message_text". " (y)");
        send_hash_message(  $message_recipient_id,"Ο κωδικός σου είναι ".code_generator(). " ;-)");
    #  $Session->{validate_phone_number} = 1;
  }else{
      send_hash_message( $message_recipient_id,"Ο αριθμός $message_text που πληκτρολόγησες δεν είναι σωστός :-( ");
  }

}


}

#Αποστολή μηνύματος text στον χρήστη.
sub send_hash_message{
    my $reply_recipient = shift;
    my $reply_message = shift;



      my %hash_message = ('recipient'=>{'id'=>$reply_recipient},'message'=>{'text' => $reply_message});

      my $post_message_json_data = encode_json(\%hash_message);

        post_to_facebook($post_message_json_data);
}

#Αποστολή template με type generic.To template αυτό στέλνεται όταν ο χρήστης στέλνει γεια στο botaki μας.
#Ο χρήστης πατώντας το κουμπί με τίτλο "Δώσε κατηγορίες" μπορεί να ενημερωθεί για τις κατηγορίες των προσφορών.
sub send_hash_welcome_message{
  my $reply_recipient = shift;

  #my @user_info = get_started_button($reply_recipient);
    my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","image_aspect_ratio"=>"square","elements"=>
    [{"title"=>"Καλωσήρθατε στο Vodafone ThankYou chatbot","image_url"=>"https://thankyou.vodafone.gr/images/logo.png","subtitle"=>"We\'ve got the right deals for yoυ.",
    "buttons"=>[{"type"=>"postback","title"=>"Δώσε Κατηγορίες","payload"=>"categories list"}]} ]}}});

    my $post_message_json_data = encode_json(\%hash_message);

      post_to_facebook($post_message_json_data);
}


#Επιστροφή template με type generic με τις κατηγορίες των προσφορών.
#Σε κάθε κατηγορία υπάρχει ένα κουμπί με τίτλο "Δώσε προσφορές", πατώντας το κουμπί ο χρήστης βλέπει τις πρώτες προσφορές της αντίστοιχης κατηγορίας
sub send_hash_categories_message{
    my $reply_recipient = shift;

  my %hash_message = ("recipient"=>{"id"=>"$reply_recipient"},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","elements"=>[{"title"=>"Οικογένεια","subtitle"=>"Προσφορές για όλη την οικογένεια.",
"buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"family_offers_page_0"}]},{"title"=> "Supermarket & Αγορές","subtitle"=>"Προσφορές για Supermarket.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"supermarket_offers_page_0"}]},{"title"=> "Διασκέδαση","subtitle"=>"Διασκέδασε τώρα πιο οικονομικά με 1+1.",
"buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"entertainment_offers_page_0"}]},{"title"=> "Αυτοκίνητο","subtitle"=>"Προσφορές και στις μετακινήσεις.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"car_offers_page_0"}]},
{"title"=> "Φαγητό & Καφές","subtitle"=>"Προσφορές στο φαγητό και στο καφέ.","buttons"=>[{"type"=>"postback","title"=>"Δώσε προσφορές","payload"=>"food_offers_page_0"}]} ]}}});



  my $post_message_json_data = encode_json(\%hash_message);

    post_to_facebook($post_message_json_data);
}

#Επιστροφή template με type generic. Το template αυτό παρουσίαζει στον χρήστη μία προσφορά και παραλλήλα μπορεί
#να πάρει κωδικό προσφοράς αλλά και να επιστρέψει πίσω στις προσφορές πατώντας τα κουμπία με τίτλος "Θέλω Προσφορά" και "Προσφορές" αντίστοιχα.
sub send_hash_offer{
  my $reply_recipient = shift;
  my $payload_offer = shift;


  my %json_array_fields = get_json_offer($payload_offer);



	 my %hash_message = ("recipient"=>{"id"=>$reply_recipient},"message"=>{"attachment"=>{"type"=>"template","payload"=>{"template_type"=>"generic","image_aspect_ratio"=>"square","elements"=>
	 [{"title"=>"$json_array_fields{title}","image_url"=>"$json_array_fields{image_url}","subtitle"=>"$json_array_fields{subtitle}",
	 "buttons"=>[{"type"=>"postback","title"=>"θέλω προσφορά","payload"=>"$json_array_fields{title} code"},{"type"=>"postback","title"=>"Προσφορές","payload"=>"$json_array_fields{current_page}"}] } ]}}});

	 my $post_message_json_data = encode_json(\%hash_message);
   post_to_facebook($post_message_json_data);
		 #return $post_message_json_data;

}

#Επιστροφή template με type list. Το συγκεκριμένο template παρουσίαζει 4 προσφορές από μία κατηγορία στον χρήστη. Ο χρήστης μπορεί να πάρει επιλέξει
#μία προσφορά πατώντας το κουμπί με τίτλο "Δώσε προσφορά" αλλά και να πάρει τις επόμενες 4 προσφορές με το κουμπί "View more".
sub send_hash_list{
  my $reply_recipient = shift;
  my $page_number = shift;

  my $hash_list_index=0;

  my %json_array_fields;


  my %hash_list = ('recipient'=>{'id'=> $reply_recipient},'message'=>{'attachment'=>{'type'=>'template','payload'=>{'template_type'=>'list',"top_element_style"=>"compact",'elements'=>
	[{'title'=>"",'image_url'=>"",'subtitle'=>"",
	'buttons'=>[{'type'=>'','title'=>"",'payload'=>""}] }],"buttons"=> [{"title"=> "View More","type"=> "postback", "payload"=> ""}] }}});


  for($hash_list_index; $hash_list_index < 4; $hash_list_index++){

    %json_array_fields = get_json_offers($page_number,$hash_list_index);
    warn "hello";
     if( $json_array_fields{title} ne "" ){

       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{title} = $json_array_fields{title};
       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{image_url} = $json_array_fields{image_url};
       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{subtitle} = $json_array_fields{subtitle};
       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{type} = "postback";
       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{title} = "$json_array_fields{title} offer";
       $hash_list{message}{attachment}{payload}{elements}[$hash_list_index]{buttons}[0]{payload} = $json_array_fields{payload};

     }else{

       last;

     }

  }

  $hash_list{message}{attachment}{payload}{buttons}[0]{payload} = $json_array_fields{next_page};



  if($hash_list_index == 1){
      send_hash_offer($reply_recipient,$hash_list{message}{attachment}{payload}{elements}[$hash_list_index-1]{buttons}[0]{payload});

  }else{

      my $post_message_json_data = encode_json(\%hash_list);
      post_to_facebook($post_message_json_data);
      #return $post_message_json_data;

  }

}


sub get_json_offers{
	my $message_text = shift;
    my $index = shift;
	my @payload_info = split /_/ , $message_text;
  my %json_array_fields = ("title"=>"","image_url"=>"","subtitle"=>"","current_page"=>"","payload"=>"","next_page"=>"");;

   my $ua = new LWP::UserAgent;
   $ua->timeout(15);

     my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);

        if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
        }else{
          my $graph_res = JSON::decode_json($res->{_content});

          my $offer = "$payload_info[0]_$payload_info[1]";
          my $page = $payload_info[2].$payload_info[3];

	          	$json_array_fields{title} = $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{title};
							$json_array_fields{image_url} = $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{image_url};
							$json_array_fields{subtitle} = $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{subtitle};
							$json_array_fields{payload} = $graph_res->{$offer}[$payload_info[3]]->{$page}[$index]->{payload};

            $json_array_fields{next_page} = $graph_res->{$offer}[$payload_info[3]]->{$page}[4]->{next_page};

  			}
          return %json_array_fields;

}

sub get_json_offer{
	my $message_text = shift;
	my @payload_info = split /_/ , $message_text;
	my %json_array_fields = ("title"=>"","image_url"=>"","subtitle"=>"","current_page"=>"","payload"=>"");

	my $ua = new LWP::UserAgent;
	$ua->timeout(30);


		my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_thank_you_offers.json";
		my $res = $ua->request(HTTP::Request::Common::GET $graph_url);


	if(!$res->is_success){
		$Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
	}else{
		my $graph_res = JSON::decode_json($res->{_content});
		my $offers = $payload_info[0]."_offers";
		my $page   = $payload_info[1].$payload_info[2];
    my $index = 0;
		do{
			if($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload} eq $message_text){
				$json_array_fields{title}=$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title};
			  $json_array_fields{image_url}=$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{image_url};
			  $json_array_fields{subtitle}=$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{subtitle};
				$json_array_fields{current_page}=$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{current_page};
				$json_array_fields{payload}=$graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{payload};

			}

            $index++;
		}while($graph_res->{$offers}[$payload_info[2]]->{$page}[$index]->{title} ne "");
	}


	 return %json_array_fields;

}

sub get_json_phone_numbers{

  my $message_text = shift;
  my $ua = new LWP::UserAgent;
  $ua->timeout(30);


    my $graph_url = "https://public.arx.net/~ctsantas/Perl/vodafone_phone_numbers.json";
    my $res = $ua->request(HTTP::Request::Common::GET $graph_url);
    my $valid_number = 0;

  if(!$res->is_success){
    $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
  }else{

    my $graph_res = JSON::decode_json($res->{_content});
    my $index = 0;


    do{
       if($message_text eq $graph_res->{users}[$index]->{phone_number})
       {
           $valid_number = 1;
       }

        $index++;
    }while($graph_res->{users}[$index]->{first_name} ne "");
  }

  return $valid_number;
}

sub post_to_facebook{
  my $post_message_json_data = shift;

  my $ua = LWP::UserAgent->new;

  my $url = "https://graph.facebook.com/v2.9/me/messages?access_token=".$permanent_token;


  my $req = HTTP::Request->new(POST => $url);
  $req->header('Content-type' => 'application/json');


  $req->content($post_message_json_data);

  warn $req->dump;
  #send_writing(); you have to pass as parameter the $messenger_recipient because it's a topic variable in decode_json_reply function
  my $resp = $ua->request($req);

    if ($resp->is_success) {

      my $message = $resp->decoded_content;


      warn "Received reply: $message\n";
    }
    else {
      warn  "HTTP POST error code: ", $resp->code, "\n";
      warn "HTTP POST error message: ", $resp->message, "\n";
    }

}


sub code_generator{
	my $code = 0;
	for(my $i=0; $i<5;$i++){
		$code .= int rand(10);
	}
	return $code;
}


sub authorize{

my  $token_url = "https://graph.facebook.com/oauth/access_token?"."grant_type=fb_exchange_token". "&client_id=" . app_conf()->{app_id}."&client_secret=" . app_conf()->{app_secret}.
"&fb_exchange_token=EAAOGFe8d8K4BAL5uD79Sf9ZAIZAZCIPLHiMqpqd0fuxVSMvZBIcIgVCulPBZCARmFpOE4qMwfyfQVD3dFliauZAUtpDh3pOtrzNTY4zXaRtAZAZBLwhDncKU3Li4fq4xeUYHDuvCRSdNt9Kivk6FVwgLc417LjXWxDy5UesWn9QItgZDZD";
    my $ua = new LWP::UserAgent;
    $ua->timeout(15);

    my $res = $ua->request(HTTP::Request::Common::GET $token_url);

    my $decode_text = JSON::decode_json($res->{_content});

    if ( $res->is_success ) {

          my $token = $decode_text->{access_token};

           print $token;

            my $graph_url = "https://graph.facebook.com/me?access_token=". $token;
            $res = $ua->request(HTTP::Request::Common::GET $graph_url);
           if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
           }else{
                 my $graph_res = JSON::decode_json($res->{_content});
              if ($graph_res->{name}) {

               print "Name: $graph_res->{name} ID: $graph_res->{id}";
              }
           }

    } else {
        die Dumper [ $res ];
    }


}
sub get_page{
   my $ua = new LWP::UserAgent;
   $ua->timeout(15);

     my $graph_url = "https://graph.facebook.com/me?access_token=".$permanent_token;
     my $res = $ua->request(HTTP::Request::Common::GET $graph_url);

        if (!$res->is_success){
              $Response->write("Σφάλμα στην επικοινωνία με το facebook .(100)");
        }else{
          my $graph_res = JSON::decode_json($res->{_content});
           if ($graph_res->{name}) {
              print "Name: $graph_res->{name} ID: $graph_res->{id}";
           }
        }

}

sub app_conf {
  return {
    app_secret    => "70a9715ac1e24f7a00006cead048f7a1",
    app_id        => "991853694283950",
  };
}

sub webhook{
 my $challenge = $Request->QueryString("hub.challenge");
 my $verify_token = $Request->QueryString("hub.verify.token");


 if($verify_token eq "Aej7uN3m"){
     return $challenge;
  }


}
